import matplotlib.pyplot as plt
fig, ax = plt.subplots()
def plot_f1score():
    y_100 = [0.976539585
        , 0.983465329
        , 0.986180494
        , 0.986927341
        , 0.988063664
        , 0.989047748
        , 0.989296316
        , 0.98992131
        , 0.99008
        , 0.990717101
        , 0.990993015
        , 0.990681725
        , 0.991465419
        , 0.991115694]
    y_300 = [0.97778355
        , 0.984148876
        , 0.986214954
        , 0.987845863
        , 0.98874071
        , 0.989038289
        , 0.989693078
        , 0.990063575
        , 0.990548074
        , 0.99039095
        , 0.990735525
        , 0.991064845
        , 0.991085324
        , 0.991449633]

    y_500 = [0.97873514
        , 0.98405369
        , 0.986602962
        , 0.987962498
        , 0.988883137
        , 0.98972825
        , 0.990108134
        , 0.99039061
        , 0.990966346
        , 0.99117333
        , 0.991335993
        , 0.991546834
        , 0.991730273
        , 0.991674372]
    x = range(3,17)
    plt.plot(x,y_100,label='d=100')
    plt.plot(x, y_300, label='d=300')
    plt.plot(x, y_500, label='d=500')
    plt.xlabel('Epoch')
    plt.ylabel('F1_score')
    plt.legend()
    plt.show()
    fig.savefig('figure/f1score.svg', dpi=600, format='svg')
def plot_pk():
    y_100 = [
        0.06882627
        , 0.051218161
        , 0.043722178
        , 0.041885708
        , 0.03867434
        , 0.035550346
        , 0.034917099
        , 0.033180235
        , 0.032503482
        , 0.030549509
        , 0.029741214
        , 0.030844651
        , 0.028237185
        , 0.029677341
    ]

    y_300 = [
        0.066138059
        , 0.048894267
        , 0.043385459
        , 0.038701999
        , 0.036264218
        , 0.035512685
        , 0.03386922
        , 0.032608993
        , 0.030721786
        , 0.031753516
        , 0.030637003
        , 0.029644139
        , 0.02944318
        , 0.028432721
    ]

    y_500 = [
        0.063074744
        , 0.050075858
        , 0.042227308
        , 0.038332198
        , 0.035641155
        , 0.032978854
        , 0.032022205
        , 0.031173959
        , 0.029653961
        , 0.028766548
        , 0.028493521
        , 0.027667389
        , 0.027222628
        , 0.027409065
    ]

    x = range(3, 17)
    plt.plot(x, y_100, label='d=100')
    plt.plot(x, y_300, label='d=300')
    plt.plot(x, y_500, label='d=500')
    plt.xlabel('Epoch')
    plt.ylabel('Pk')
    plt.legend()
    plt.show()
    fig.savefig('figure/pk.svg', dpi=600, format='svg')
def plot_windiff():
    y_100 = [
        0.009209407
        , 0.007107623
        , 0.006254496
        , 0.005661622
        , 0.005347258
        , 0.004973601
        , 0.004848747
        , 0.004693162
        , 0.004291665
        , 0.004139033
        , 0.00372892
        , 0.004033522
        , 0.003854256
        , 0.003953199
    ]

    y_300 = [
        0.009070755
        , 0.00646823
        , 0.005347318
        , 0.0050203
        , 0.004924129
        , 0.004811026
        , 0.004423208
        , 0.004488045
        , 0.004178562
        , 0.004346922
        , 0.004022615
        , 0.003962659
        , 0.003816896
        , 0.003785803
    ]

    y_500 = [
        0.008952107
        , 0.007676454
        , 0.006294085
        , 0.005443308
        , 0.005125269
        , 0.004699067
        , 0.004170789
        , 0.004129693
        , 0.003783574
        , 0.003560741
        , 0.003837082
        , 0.003606537
        , 0.003496989
        , 0.003385753
    ]
    x = range(3, 17)
    plt.plot(x, y_100, label='d=100')
    plt.plot(x, y_300, label='d=300')
    plt.plot(x, y_500, label='d=500')
    plt.xlabel('Epoch')
    plt.ylabel('Windowdiff')
    plt.legend()
    plt.show()
    fig.savefig('figure/windowdiff.svg', dpi=600, format='svg')

def plot_acc():
    y_raw = [
        0.021414665801427646
        ,0.0317975340687865
        ,0.03504218040233614
        ,0.03698896820246593
        ,0.04153147306943543
        ,0.043478260869565216
        ,0.046073977936404935
        ,0.04866969500324465
        ,0.0499675535366645
        ,0.05126541207008436
        ,0.054510058403634
        ,0.05515898767034393
        ,0.055807916937053864
        ,0.05710577547047372
        ,0.057754704737183644
        ,0.058403634003893576
        ,0.058403634003893576
        ,0.058403634003893576
        ,0.05970149253731343
        ,0.06099935107073329
        ,0.06164828033744322
        ,0.06294613887086307
        ,0.06294613887086307
        ,0.06424399740428294
    ]
    y_bpe = [
        0.11096690460739779
        ,0.1473069435431538
        ,0.16872160934458144
        ,0.18234912394548994
        ,0.190785204412719
        ,0.19922128487994809
        ,0.2063595068137573
        ,0.21155094094743673
        ,0.21868916288124596
        ,0.22517845554834523
        ,0.22972096041531473
        ,0.23491239454899415
        ,0.24205061648280338
        ,0.2472420506164828
        ,0.2511356262167424
        ,0.2556781310837119
        ,0.25957170668397145
        ,0.26411421155094095
        ,0.2673588578844906
        ,0.27060350421804025
        ,0.2738481505515899
        ,0.27579493835171964
        ,0.2790395846852693
        ,0.2835820895522388

    ]
    y_infer = [
        0.20940438871473355
        ,0.2670846394984326
        ,0.296551724137931
        ,0.31347962382445144
        ,0.32225705329153603
        ,0.33166144200626957
        ,0.34294670846394987
        ,0.3504702194357367
        ,0.361128526645768
        ,0.36489028213166147
        ,0.3711598746081505
        ,0.3749216300940439
        ,0.3774294670846395
        ,0.3824451410658307
        ,0.38746081504702196
        ,0.38996865203761755
        ,0.39373040752351096
        ,0.3974921630094044
        ,0.40376175548589344
        ,0.40815047021943573
        ,0.41128526645768027
        ,0.41630094043887145
        ,0.41755485893416927
        ,0.41818181818181815

    ]
    x = [i for i in range(2,50) if i%2==0]
    plt.plot(x, y_raw, label='raw')
    plt.plot(x, y_bpe, label='bpe')
    plt.plot(x, y_infer, label='morpheme')
    plt.xlabel('top_k')
    plt.ylabel('acc')
    plt.legend()
    plt.show()
    fig.savefig('figure/analogy.svg', dpi=600, format='svg')
if __name__ == '__main__':
    # plot_f1score()
    # plot_pk()
    # plot_windiff()
    plot_acc()